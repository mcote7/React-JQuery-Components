{"version":3,"sources":["components/Navbar.jsx","components/Popups.jsx","components/Main.jsx","App.js","serviceWorker.js","index.js"],"names":["Navbar","useEffect","$","mouseenter","addClass","mouseleave","removeClass","class","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","role","aria-haspopup","aria-labelledby","Popups","className","Main","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.639149ef.chunk.js","sourcesContent":["import React,{ useEffect } from 'react';\r\nimport $ from 'jquery';\r\n\r\nconst Navbar = () => {\r\n  useEffect(()=> {\r\n    $(\"#navbarDropdown\").mouseenter(function(){\r\n        $(\"#cote\").addClass(\" show\")\r\n        $(\"#navbarDropdown\").addClass(\" arr\")\r\n      })\r\n    $(\"#cote\").mouseenter(function(){\r\n        $(\"#cote\").addClass(\" show\")\r\n      })\r\n    $(\"#cote\").mouseleave(function(){\r\n        $(\"#cote\").removeClass(\" show\")\r\n        $(\"#navbarDropdown\").removeClass(\" arr\")\r\n      })\r\n  })\r\n\r\n\r\n  return (\r\n  <nav class=\"navbar sticky-top navbar-expand-lg navbar-light bg-light\">\r\n    <a class=\"navbar-brand\" href=\"/\">REACT</a>\r\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul class=\"navbar-nav mr-auto\">\r\n        <li class=\"nav-item active\">\r\n          <a class=\"nav-link\" href=\"/\">Home</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" href=\"/\">Link</a>\r\n        </li>\r\n\r\n        <li class=\"nav-item dropdown\">\r\n\r\n          <a class=\"nav-link dropdown-toggle\" href=\"/\"\r\n          id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Dropdown</a>\r\n\r\n          <div id=\"cote\" class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n            <a class=\"dropdown-item\" href=\"/\">Action</a>\r\n            <a class=\"dropdown-item\" href=\"/\">Another action</a>\r\n            <div class=\"dropdown-divider\"></div>\r\n            <a class=\"dropdown-item\" href=\"/\">Something else here</a>\r\n          </div>\r\n\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </nav>\r\n  );\r\n}\r\nexport default Navbar;","import React, {useEffect} from 'react';\r\nimport $ from 'jquery';\r\nimport '../CSS/popups.css';\r\n\r\nconst Popups = () => {\r\n  useEffect(()=> {\r\n    $(\"#hoverone\").mouseenter(function(){\r\n        $(\"#popone\").addClass(\" appear\")\r\n      })\r\n    $(\"#popone\").mouseenter(function(){\r\n        $(\"#popone\").addClass(\" appear\")\r\n      })\r\n    $(\"#popone\").mouseleave(function(){\r\n        $(\"#popone\").removeClass(\" appear\")\r\n      })\r\n    //----------------------------------------------\r\n    $(\"#hovertwo\").mouseenter(function(){\r\n        $(\"#poptwo\").addClass(\" appear\")\r\n      })\r\n    $(\"#poptwo\").mouseenter(function(){\r\n        $(\"#poptwo\").addClass(\" appear\")\r\n      })\r\n    $(\"#poptwo\").mouseleave(function(){\r\n        $(\"#poptwo\").removeClass(\" appear\")\r\n      })\r\n    //-----------------------------------------------\r\n    $(\"#hoverthree\").mouseenter(function(){\r\n        $(\"#popthree\").addClass(\" appear\")\r\n      })\r\n    $(\"#popthree\").mouseenter(function(){\r\n        $(\"#popthree\").addClass(\" appear\")\r\n      })\r\n    $(\"#popthree\").mouseleave(function(){\r\n        $(\"#popthree\").removeClass(\" appear\")\r\n      })\r\n    //-----------------------------------------------\r\n    $(\"#hoverfour\").mouseenter(function(){\r\n        $(\"#popfour\").addClass(\" appear\")\r\n      })\r\n    $(\"#popfour\").mouseenter(function(){\r\n        $(\"#popfour\").addClass(\" appear\")\r\n      })\r\n    $(\"#popfour\").mouseleave(function(){\r\n        $(\"#popfour\").removeClass(\" appear\")\r\n      })\r\n  })\r\n  return (\r\n    <div className=\"popCont\">\r\n      <h1 className=\"poptitle\">\r\n        <span id=\"hoverone\">hover</span>&nbsp;\r\n        <span id=\"hovertwo\">over&nbsp;</span>\r\n        <span id=\"hoverthree\">these</span>&nbsp;\r\n        <span id=\"hoverfour\">words</span>\r\n      </h1>\r\n      <div id=\"popone\" className=\"boxOne\">\r\n        <p>hello</p><hr/>\r\n        <p>hello</p><hr/>\r\n        <p>hello</p><hr/>\r\n        <p>hello</p>\r\n      </div>\r\n      <div id=\"poptwo\" className=\"boxTwo\">\r\n        <p>hello</p><hr/>\r\n        <p>hello</p>\r\n      </div>\r\n      <div id=\"popthree\" className=\"boxThree\">\r\n        <p>hello</p><hr/>\r\n        <p>hello</p>\r\n      </div>\r\n      <div id=\"popfour\" className=\"boxFour\">\r\n        <p>hello</p><hr/>\r\n        <p>hello</p><hr/>\r\n        <p>hello</p><hr/>\r\n        <p>hello</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Popups;","import React from 'react';\r\n\r\nconst Main = () => {\r\n  return (\r\n    <div className=\"mainContainer\">\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;","import React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Popups from './components/Popups';\nimport Main from './components/Main';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"container-fluid\">\n        <Navbar/>\n        <Popups/>\n        <Main/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}